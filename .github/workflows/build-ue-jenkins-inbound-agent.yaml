name: Build and publish ue-jenkins-inbound-agent

on:
  push:
    branches:
      - '**'

jobs:
  build-linux:
    name: Build and publish ue-jenkins-inbound-agent for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GOOGLE_CLOUD_BUILD_ARTIFACT_UPLOADER_SERVICE_ACCOUNT_KEY }}

      - name: Configure docker to use gcloud as credential helper
        run: |
          gcloud auth configure-docker ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev

      - name: Build image and push to GAR
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./linux/jenkins-inbound-agent-linux.Dockerfile
          push: true
          tags: ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/docker-build-artifacts/jenkins-inbound-agent-linux:commit-${{ github.sha }}

  build-windows:
    name: Build and publish ue-jenkins-inbound-agent for Windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.14.0"

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_CLOUD_IMAGE_BUILDER_INSTANCE_CONTROLLER_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Build windows-builder tool
        run: |
          (cd windows/builder && go build -o main .)

      - name: Add service account key to builder workspace
        run: |
          echo '${{ secrets.GOOGLE_CLOUD_BUILD_ARTIFACT_UPLOADER_SERVICE_ACCOUNT_KEY }}' > windows/builder-workspace/service-account-key.json

      # We zip up the builder-workspace folder, because the cloud image builder will otherwise copy builder-workspace files
      # one-by-one, spending one second per file
      - name: Zip up builder workspace
        run: |
          (cd windows/builder-workspace && mkdir ../builder-workspace-zipped && zip -r ../builder-workspace-zipped/builder-workspace.zip *)

      - name: Start Windows VM, Build image and push to GAR via said VM, tear down VM
        run: |
          ./windows/builder/main \
            -labels type=windows-image-builder \
            -region ${{ secrets.GOOGLE_CLOUD_REGION }} \
            -zone ${{ secrets.GOOGLE_CLOUD_ZONE }} \
            -network image-builder-network \
            -subnetwork image-builder-subnetwork \
            -machineType n1-standard-4 \
            -diskType pd-ssd \
            -diskSizeGb 100 \
            -image windows-cloud/global/images/windows-server-2019-dc-for-containers-v20210212 \
            -workspace-path windows/builder-workspace-zipped \
            -serviceAccount build-artifact-uploader@${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com \
            -command "powershell try { Expand-Archive -Path .\\builder-workspace.zip -DestinationPath .; .\\Build.ps1 -GceRegion ${{ secrets.ARTIFACT_REGISTRY_LOCATION }} -ImageName ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/docker-build-artifacts/jenkins-inbound-agent-windows -ImageTag commit-${{ github.sha }} } catch { Write-Error \$_ }"
